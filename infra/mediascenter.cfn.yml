AWSTemplateFormatVersion: "2010-09-09"
Description: Chatanoo Medias Center

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Configuration
        Parameters": ["ProjectName", "MultiAZ", "UseSecureConnection"]
      - Label:
          default: DNS Configuration
        Parameters: ["SubDomainName", "Route53HostedZone"]
      - Label:
          default: Advanced Configuration
        Parameters: ["DeploymentBucket", "TranscoderSourceKey"]
      - Label:
          default: Custom Resources Configuration
        Parameters: ["ElasticTranscoderPipelineLambda", "ElasticTranscoderPresetLambda", "S3UploaderLambda", "CloudFrontIdentityLambda", "CloudFrontCertificateLambda", "CognitoIdentityPoolLambda", "CognitoIdentityPoolRolesLambda"]
    ParameterLabels: []

Parameters:
  ProjectName:
    Type: String
  MultiAZ:
    Type: String
    AllowedValues: ["true", "false"]
    Default: false
  UseSecureConnection:
    Description: Use HTTPS to connect this website
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"

  SubDomainName:
    Description: Subdomain Name of the website
    Type: String
  Route53HostedZone:
    Description: AWS Route53 HostedZone ID of the domain
    Type: String

  DeploymentBucket:
    Description: Url of the source code of the transcoding lambda
    Type: String
    Default: chatanoo-deployment
  TranscoderSourceKey:
    Description: Url of the source code of the transcoding lambda
    Type: String
    Default: mediascenter/transcoder/1.0.0.zip
  VPCId:
    Description: AWS VPC ID
    Type: AWS::EC2::VPC::Id
  CidrPrefix:
    Type: String
    Default: '10.0.4'
  PrivateRouteTable:
    Type: String

  ElasticTranscoderPipelineLambda:
    Description: ElasticTranscoderPipeline lambda name
    Type: String
    Default: aws-cloudformation-elastic-transcoder-pipeline-1-0-0
  ElasticTranscoderPresetLambda:
    Description: ElasticTranscoderPreset lambda name
    Type: String
    Default: aws-cloudformation-elastic-transcoder-preset-1-0-0
  S3UploaderLambda:
    Description: S3 Uploader lambda name
    Type: String
    Default: aws-cloudformation-s3-uploader-1-0-0
  CloudFrontIdentityLambda:
    Description: Lambda for the CloudFront Identity Custom Resource
    Type: String
    Default: aws-cloudformation-cloudfront-identity-1-0-0
  CloudFrontCertificateLambda:
    Description: Lambda for the CloudFront Certificate Custom Resource
    Type: String
    Default: aws-cloudformation-cloudfront-certificate-1-0-0
  CognitoIdentityPoolLambda:
    Description: Lambda for the CloudFront Certificate Custom Resource
    Type: String
    Default: aws-cloudformation-cognito-identitypool-1-0-0
  CognitoIdentityPoolRolesLambda:
    Description: Lambda for the CloudFront Certificate Custom Resource
    Type: String
    Default: aws-cloudformation-cognito-identitypoolroles-1-0-0
  Route53HostedZoneDetailsLambda:
    Description: Lambda for the Route53 HostedZone Details Custom Resource
    Type: String
    Default: aws-cloudformation-route53-hostedzone-details-1-0-0

# Mappings:

Conditions:
  UseDNSRecord: !Not [!Equals [!Ref Route53HostedZone, ""]]
  UseMultiAZ: !Equals [!Ref MultiAZ, "true"]
  UseHTTPS: !Equals [!Ref UseSecureConnection, "true"]
  UseDNSAndHTTPS: !And
    - !Condition UseDNSRecord
    - !Condition UseHTTPS

Resources:

  DomainName:
    Type: Custom::Route53HostedZoneDetails
    Version: '1.0'
    Condition: UseDNSRecord
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref Route53HostedZoneDetailsLambda]]
      Id: !Ref Route53HostedZone

  ###########
  # Network #
  ###########

  MediasCenterSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCId
      CidrBlock: !Sub "${CidrPrefix}.0/25"
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select ['0', !GetAZs { Ref: 'AWS::Region'}]
      Tags:
        - Key: Name
          Value: !Sub "Chatano MediasCenterSubnet1 (${ProjectName})"
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter

  MediasCenterSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MediasCenterSubnet1
      RouteTableId: !Ref PrivateRouteTable

  MediasCenterSubnet2:
    Type: AWS::EC2::Subnet
    Condition: UseMultiAZ
    Properties:
      VpcId: !Ref VPCId
      CidrBlock: !Sub "${CidrPrefix}.128/25"
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select ['1', !GetAZs { Ref: 'AWS::Region'}]
      Tags:
        - Key: Name
          Value: !Sub "Chatano MediasCenterSubnet2 (${ProjectName})"
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter

  MediasCenterSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: UseMultiAZ
    Properties:
      SubnetId: !Ref MediasCenterSubnet2
      RouteTableId: !Ref PrivateRouteTable

  MediasCenterNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub "Chatano MediasCenterNetworkAcl (${ProjectName})"
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter

  InboundMediasCenterNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref MediasCenterNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  OutboundMediasCenterNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref MediasCenterNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  MediasCenterSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref MediasCenterSubnet1
      NetworkAclId: !Ref MediasCenterNetworkAcl

  MediasCenterSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: UseMultiAZ
    Properties:
      SubnetId: !Ref MediasCenterSubnet2
      NetworkAclId: !Ref MediasCenterNetworkAcl

  MediasCenterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MediasCenter Transcoder SecurityGroup
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub "Chatanoo MediasCenterGroup (${ProjectName})"
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter

  ########################
  # Transcoding Pipeline #
  ########################

  InputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    DependsOn: TranscoderLambda
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: delete
            ExpirationInDays: 1
            Prefix: upload/
            Status: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - POST
              - GET
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
              - Name: prefix
                Value: upload/
          Function: !GetAtt TranscoderLambda.Arn
      Tags:
        - Key: Name
          Value: !Join [' - ', [!Ref ProjectName, 'Medias Center', 'Input Bucket']]
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter

  OutputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: ia
            Status: Enabled
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - POST
              - GET
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3000
      Tags:
        - Key: Name
          Value: !Join [' - ', [!Ref ProjectName, 'Medias Center', 'Output Bucket']]
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elastictranscoder.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: ''

  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: pipeline-policy
      Roles:
        - !Ref PipelineRole
      PolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Sid: '1'
            Effect: Allow
            Action:
              - s3:Put*
              - s3:ListBucket
              - s3:*MultipartUpload*
              - s3:Get*
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref InputBucket]]
              - !Join ['', ['arn:aws:s3:::', !Ref OutputBucket]]
          - Sid: '2'
            Effect: Allow
            Action:
              - s3:Put*
              - s3:ListBucket
              - s3:*MultipartUpload*
              - s3:Get*
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref InputBucket, '/upload/*']]
              - !Join ['', ['arn:aws:s3:::', !Ref OutputBucket, '/*']]
          - Sid: '3'
            Effect: Deny
            Action:
              - s3:*Delete*
              - s3:*Policy*
              - sns:*Remove*
              - sns:*Delete*
              - sns:*Permission*
            Resource: "*"

  TranscodingPipeline:
    Type: Custom::ElasticTranscoderPipeline
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPipelineLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Pipeline']]
      Role: !GetAtt PipelineRole.Arn
      InputBucket: !Ref InputBucket
      OutputBucket: !Ref OutputBucket

  #######################
  # Transcoding Presets #
  #######################

  Mp4Preset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - MP4']]
      Description: Chatanoo - MP4
      Container: mp4
      Video:
        Codec: H.264
        CodecOptions:
          InterlacedMode: Progressive
          MaxReferenceFrames: '3'
          Level: '3.1'
          ColorSpaceConversionMode: None
          Profile: main
        KeyframesMaxDist: '90'
        FixedGOP: 'false'
        BitRate: '2200'
        FrameRate: '30'
        MaxWidth: '1280'
        MaxHeight: '720'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad
        DisplayAspectRatio: auto
        Watermarks:
          - Id: TopLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: TopRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
      Audio:
        Codec: AAC
        CodecOptions:
          Profile: AAC-LC
        SampleRate: '48000'
        BitRate: '160'
        Channels: '2'
      Thumbnails:
        Format: png
        Interval: '60'
        MaxWidth: '192'
        MaxHeight: '108'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad

  WebMPreset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: Mp4Preset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - WebM']]
      Description: Chatanoo - WebM
      Container: webm
      Video:
        Codec: vp8
        CodecOptions:
          Profile: '1'
        KeyframesMaxDist: '90'
        FixedGOP: 'false'
        BitRate: '2200'
        FrameRate: '30'
        MaxWidth: '1280'
        MaxHeight: '720'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad
        DisplayAspectRatio: auto
        Watermarks:
          - Id: TopLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: TopRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
      Audio:
        Codec: vorbis
        CodecOptions: {}
        SampleRate: '48000'
        BitRate: '160'
        Channels: '2'
      Thumbnails:
        Format: png
        Interval: '60'
        MaxWidth: '192'
        MaxHeight: '108'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad

  FlvPreset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: WebMPreset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - FLV']]
      Description: Chatanoo - FLV
      Container: flv
      Video:
        Codec: H.264
        CodecOptions:
          InterlacedMode: Progressive
          MaxReferenceFrames: '3'
          Level: '3.1'
          ColorSpaceConversionMode: None
          Profile: main
        KeyframesMaxDist: '90'
        FixedGOP: 'false'
        BitRate: '2200'
        FrameRate: '30'
        MaxWidth: '1280'
        MaxHeight: '720'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad
        DisplayAspectRatio: auto
        Watermarks:
          - Id: TopLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: TopRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
      Audio:
        Codec: AAC
        CodecOptions:
          Profile: AAC-LC
        SampleRate: '44100'
        BitRate: '128'
        Channels: '2'
      Thumbnails:
        Format: png
        Interval: '60'
        MaxWidth: '192'
        MaxHeight: '108'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad

  HLS400KPreset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: FlvPreset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - HLS 400k']]
      Description: Chatanoo - HLS 400k
      Container: ts
      Video:
        Codec: H.264
        CodecOptions:
          InterlacedMode: Progressive
          MaxReferenceFrames: '1'
          Level: '3'
          ColorSpaceConversionMode: None
          Profile: baseline
        KeyframesMaxDist: '90'
        FixedGOP: 'true'
        BitRate: '272'
        FrameRate: auto
        MaxWidth: '400'
        MaxHeight: '280'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad
        DisplayAspectRatio: auto
        Watermarks:
          - Id: TopLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: TopRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
      Audio:
        Codec: AAC
        CodecOptions:
          Profile: AAC-LC
        SampleRate: '44100'
        BitRate: '128'
        Channels: '2'
      Thumbnails:
        Format: png
        Interval: '300'
        MaxWidth: '192'
        MaxHeight: '108'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad

  HLS1MPreset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: HLS400KPreset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - HLS 1M']]
      Description: Chatanoo - HLS 1M
      Container: ts
      Video:
        Codec: H.264
        CodecOptions:
          InterlacedMode: Progressive
          MaxReferenceFrames: '3'
          Level: '3.1'
          ColorSpaceConversionMode: None
          Profile: main
        KeyframesMaxDist: '90'
        FixedGOP: 'true'
        BitRate: '872'
        FrameRate: auto
        MaxWidth: '640'
        MaxHeight: '432'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad
        DisplayAspectRatio: auto
        Watermarks:
          - Id: TopLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: TopRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
      Audio:
        Codec: AAC
        CodecOptions:
          Profile: AAC-LC
        SampleRate: '44100'
        BitRate: '128'
        Channels: '2'
      Thumbnails:
        Format: png
        Interval: '300'
        MaxWidth: '192'
        MaxHeight: '108'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad

  HLS2MPreset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: HLS1MPreset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - HLS 2M']]
      Description: Chatanoo - HLS 2M
      Container: ts
      Video:
        Codec: H.264
        CodecOptions:
          InterlacedMode: Progressive
          MaxReferenceFrames: '3'
          Level: '3.1'
          ColorSpaceConversionMode: None
          Profile: main
        KeyframesMaxDist: '90'
        FixedGOP: 'true'
        BitRate: '1872'
        FrameRate: auto
        MaxWidth: '1024'
        MaxHeight: '768'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad
        DisplayAspectRatio: auto
        Watermarks:
          - Id: TopLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: TopRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Top
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomLeft
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Left
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
          - Id: BottomRight
            MaxWidth: 10%
            MaxHeight: 10%
            SizingPolicy: ShrinkToFit
            HorizontalAlign: Right
            HorizontalOffset: 10%
            VerticalAlign: Bottom
            VerticalOffset: 10%
            Opacity: '100'
            Target: Content
      Audio:
        Codec: AAC
        CodecOptions:
          Profile: AAC-LC
        SampleRate: '44100'
        BitRate: '128'
        Channels: '2'
      Thumbnails:
        Format: png
        Interval: '300'
        MaxWidth: '192'
        MaxHeight: '108'
        SizingPolicy: ShrinkToFit
        PaddingPolicy: NoPad

  Mp3Preset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: HLS2MPreset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - MP3']]
      Description: Chatanoo - MP3
      Container: mp3
      Audio:
        Codec: mp3
        CodecOptions: {}
        SampleRate: '44100'
        BitRate: '128'
        Channels: '2'

  OggPreset:
    Type: Custom::ElasticTranscoderPreset
    Version: '1.0'
    DependsOn: Mp3Preset
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref ElasticTranscoderPresetLambda]]
      Name: !Join [' - ', [!Ref ProjectName, 'Chatanoo - OGG']]
      Description: Chatanoo - OGG
      Container: ogg
      Audio:
        Codec: vorbis
        CodecOptions: {}
        SampleRate: '44100'
        BitRate: '128'
        Channels: '2'

  ##################
  # Lambda Trigger #
  ##################

  ConfigFile:
    Type: Custom::S3Uploader
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref S3UploaderLambda]]
      Source:
        Json:
          pipeline: !Ref TranscodingPipeline
          mp4_preset: !Ref Mp4Preset
          webm_preset: !Ref WebMPreset
          flv_preset: !Ref FlvPreset
          hls400k_preset: !Ref HLS400KPreset
          hls1m_preset: !Ref HLS1MPreset
          hls2m_preset: !Ref HLS2MPreset
          mp3_preset: !Ref Mp3Preset
          ogg_preset: !Ref OggPreset
          hls_segment_duration: 1
          output_bucket: !Ref OutputBucket
          img_max_width: 1024
          img_max_height: 768
      Destination:
        Bucket: !Ref InputBucket
        Key: pipeline.config

  TranscoderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: ''
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - elastictranscoder:CreateJob
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"

  TranscoderLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: !Ref TranscoderSourceKey
      Description: !Sub "(${ProjectName}) Chatanoo MediasCenter Transcoder"
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt TranscoderRole.Arn
      Runtime: nodejs4.3
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - !Ref MediasCenterSecurityGroup
        SubnetIds: !If
          - UseMultiAZ
          - - !Ref MediasCenterSubnet1
            - !Ref MediasCenterSubnet2
          - - !Ref MediasCenterSubnet1

  TranscoderLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt TranscoderLambda.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

  #######
  # CDN #
  #######

  CDNIdentity:
    Type: Custom::CloudFrontIdentity
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref CloudFrontIdentityLambda]]
      Comment: !Join ['-', [access-identity, !Ref OutputBucket]]

  CDNCertificate:
    Type: Custom::CloudFrontCertificate
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref CloudFrontCertificateLambda]]
      DomainName: !Join ['.', [!Ref SubDomainName, !Ref DomainName]]
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          ValidationDomain: !Join ['.', [!Ref SubDomainName, !Ref DomainName]]
      Tags:
        - Key: Name
          Value: !Join [' - ', [!Ref ProjectName, Medias Center, Certificate]]
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mediascenter
    Condition: UseDNSAndHTTPS

  CDNDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt OutputBucket.DomainName
            Id: !Join ['-', [s3Origin, !Ref OutputBucket]]
            S3OriginConfig:
              OriginAccessIdentity: !Join ['', ['origin-access-identity/cloudfront/', !Ref CDNIdentity]]
        Enabled: 'true'
        Comment: Chatanoo MediasCenter Distribution
        Aliases:
          - Fn::If:
            - UseDNSRecord
            - !Join ['.', [!Ref SubDomainName, !Ref DomainName]]
            - !Ref AWS::NoValue
        PriceClass: PriceClass_All
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: !Join ['-', [s3Origin, !Ref OutputBucket]]
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        ViewerCertificate:
          Fn::If:
            - UseDNSAndHTTPS
            - SSLSupportMethod: sni-only
              ACMCertificateArn: !Ref CDNCertificate
              MinimumProtocolVersion: TLSv1
              Certificate: !Ref CDNCertificate
              CertificateSource: acm
            - !Ref AWS::NoValue

  OutputBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CDNDistribution
    Properties:
      Bucket: !Ref OutputBucket
      PolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Sid: '2'
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CDNIdentity.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref OutputBucket, "/*"]]

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Fn::If:
          - UseDNSRecord
          - !Ref Route53HostedZone
          - !Ref AWS::NoValue
      Comment: !Join [' - ', [!Ref ProjectName, Public DNS Record for Chatanoo Medias Center]]
      Name: !Join ['', [!Ref SubDomainName, '.', !Ref DomainName, '.']]
      Type: CNAME
      TTL: '300'
      ResourceRecords:
        - !GetAtt CDNDistribution.DomainName
    Condition: UseDNSRecord

  ##################
  # Cognito Access #
  ##################

  UploadIdentityAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref UploadIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Path: ''

  UploadIdentityAuthPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: UploadIdentityAuthPolicy
      Roles:
       - !Ref UploadIdentityAuthRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref InputBucket, "/upload/"]]
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref OutputBucket, "/*"]]

  UploadIdentityUnauthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref UploadIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
      Path: ''

  UploadIdentityUnauthPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: UploadIdentityUnauthPolicy
      Roles:
        - !Ref UploadIdentityUnauthRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref InputBucket, "/upload/*"]]
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Join ['', ['arn:aws:s3:::', !Ref OutputBucket, "/*"]]

  UploadIdentityPool:
    Type: Custom::CognitoIdentityPool
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref CognitoIdentityPoolLambda]]
      IdentityPoolName: MyIdentityPool
      AllowUnauthenticatedIdentities: 'true'
      DeveloperProviderName: MyDeveloper
      SupportedLoginProviders:
        graph.facebook.com: '123456789012345' # TODO: dynamic

  UploadIdentityRoles:
    Type: Custom::CognitoIdentityPoolRoles
    Version: '1.0'
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref CognitoIdentityPoolRolesLambda]]
      IdentityPoolId: !Ref UploadIdentityPool
      Roles:
        authenticated: !GetAtt UploadIdentityAuthRole.Arn
        unauthenticated: !GetAtt UploadIdentityUnauthRole.Arn

Outputs:
  InputBucket:
    Value: !Ref InputBucket
  OutputBucket:
    Value: !Ref OutputBucket
  TranscodingPipeline:
    Value: !Ref TranscodingPipeline
  Mp4Preset:
    Value: !Ref Mp4Preset
  WebMPreset:
    Value: !Ref WebMPreset
  FlvPreset:
    Value: !Ref FlvPreset
  Mp3Preset:
    Value: !Ref Mp3Preset
  OggPreset:
    Value: !Ref OggPreset
  UploadIdentityPool:
    Value: !Ref UploadIdentityPool
  Url:
    Value: !If
      - UseDNSRecord
      - !Join ['', [!If [UseHTTPS, 'https://', 'http://'], !Ref SubDomainName, '.', !Ref DomainName]]
      - !Join ['', [!If [UseHTTPS, 'https://', 'http://'], !GetAtt CDNDistribution.DomainName]]
